{"version":3,"sources":["reducers/playersReducers.js","reducers/index.js","actions/playersAction.js","CreatePlayer.js","DisplayPlayer.js","App.js","serviceWorker.js","index.js","store.js"],"names":["init","displayPlayerData","id","firstName","lastName","score","combineReducers","playersReducers","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","payload","splice","findIndex","e","index","formData","console","log","slice","editPlayerAction","data","dispatch","CreatePlayer","displayNewPlayer","handleChange","_ref","target","name","value","_this","setState","defineProperty","handleClick","stopPropagation","preventDefault","_this$state","props","location","edit","addPlayerAction","alert","this","_this$state2","react_default","a","createElement","Redirect","to","className","Form","FormGroup","row","Label","for","sm","style","color","Col","Input","onChange","placeholder","Button","onClick","Component","connect","DisplayPlayer","addNewPlayer","sortingIsDoneOn","editPlayer","removePlayer","deletePlayerAction","handleSort","handleSortingAction","sort","b","Number","localeCompare","nextProps","_this2","pathname","Fragment","Table","cursor","map","player","key","App","BrowserRouter","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2370759f.chunk.js","sourcesContent":["export const ADD_PLAYER_ACTION = 'ADD_PLAYER_ACTION';\nexport const DELETE_PLAYER_ACTION = 'DELETE_PLAYER_ACTION';\nexport const EDIT_PLAYER_ACTION = 'EDIT_PLAYER_ACTION';\nexport const HANDLE_SORT_DATA = 'HANDLE_SORT_DATA';\n\nconst init = {\n    displayPlayerData: [\n        { id: 1, firstName: 'Mark', lastName: 'Otto', score: 98 },\n        { id: 2, firstName: 'Junge', lastName:'John', score: 68 },\n        { id: 3, firstName: 'Vera', lastName:'Rob', score: 88 },\n    ]\n};\n\nexport default (state = init, action) => {\n    switch (action.type) {\n        case ADD_PLAYER_ACTION:\n            return {\n                ...state, displayPlayerData: [ ...state.displayPlayerData, { ...action.payload, id: state.displayPlayerData.length + 1 } ]\n            };\n        case DELETE_PLAYER_ACTION: {\n            const { displayPlayerData } = state;\n            displayPlayerData.splice(displayPlayerData.findIndex(e => e.id === action.payload), 1);\n            return {\n                ...state, displayPlayerData: [...displayPlayerData]\n            };\n        }\n        case EDIT_PLAYER_ACTION: {\n            const { displayPlayerData } = state;\n            const index = displayPlayerData.findIndex(e => e.id === action.payload.formData.id);\n            debugger;\n            console.log(index);\n            return {\n                ...state, displayPlayerData: [ ...displayPlayerData.slice(0, index), { ...action.payload.formData }, ...displayPlayerData.slice(index + 1, displayPlayerData.length) ]\n            };\n        }\n        case HANDLE_SORT_DATA:\n            return {\n                ...state, displayPlayerData: [ ...action.payload ]\n            };\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport playersReducers from './playersReducers';\n\nexport default combineReducers({\n    playersReducers\n});","import { ADD_PLAYER_ACTION, DELETE_PLAYER_ACTION, HANDLE_SORT_DATA, EDIT_PLAYER_ACTION } from '../reducers/playersReducers';\n\nexport const addPlayerAction = (data) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_ACTION,\n        payload: { ...data.formData },\n    })\n};\n\nexport const deletePlayerAction = (data) => dispatch => {\n    dispatch({\n        type: DELETE_PLAYER_ACTION,\n        payload: data,\n    })\n};\n\nexport const handleSortingAction = (data) => dispatch => {\n    dispatch({\n        type: HANDLE_SORT_DATA,\n        payload: data,\n    })\n};\n\nexport const editPlayerAction = (data) => dispatch => {\n    debugger;\n    dispatch({\n        type: EDIT_PLAYER_ACTION,\n        payload: data,\n    })\n};\n","import React, { Component } from 'react';\nimport { Button, Col, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Redirect } from 'react-router'\nimport { connect } from 'react-redux';\n\nimport { addPlayerAction, editPlayerAction } from './actions/playersAction';\n\nclass CreatePlayer extends Component {\n    state = {\n        displayNewPlayer: false,\n    };\n\n    componentDidMount() {\n        if (this.props.location.state && this.props.location.state.edit) {\n            this.setState({\n                firstName: this.props.location.state.formData.firstName,\n                lastName: this.props.location.state.formData.lastName,\n                score: this.props.location.state.formData.score,\n            })\n        }\n    }\n\n    handleChange = ({ target }) => {\n        if (target.name === 'score') {\n            target.value >= 0 && target.value <= 100 && this.setState({\n                [target.name]: target.value,\n            });\n        } else {\n            this.setState({\n                [target.name]: target.value,\n            });\n        }\n    };\n\n    handleClick = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        const { firstName, lastName, score } = this.state;\n        if(!firstName ) {\n            return alert('Please Enter The First Name');\n        }\n        if(!lastName) {\n            return alert('Please Enter The Last Name');\n        }\n        if(!score) {\n            return alert('Please Enter The Score');\n        }\n\n        if (this.props.location.state && this.props.location.state.edit) {\n            this.props.editPlayerAction({ formData: { firstName, lastName, score, id: this.props.location.state.formData.id } })\n        } else {\n            this.props.addPlayerAction({ formData: { firstName, lastName, score } });\n        }\n\n        this.setState({\n            displayNewPlayer: true,\n        })\n    };\n\n    render() {\n        const { firstName, lastName, score, displayNewPlayer } = this.state;\n        if (displayNewPlayer) {\n            return <Redirect to='/' />;\n        }\n\n        return (\n            <div className=\"App\">\n                <Form>\n                    <FormGroup row>\n                        <Label for=\"exampleEmail\" sm={2}>First Name <span style={{ color: 'red' }}>*</span></Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleChange} placeholder=\"Enter First Name\"/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"exampleEmail\" sm={2}>Last Name <span style={{ color: 'red' }}>*</span></Label>\n                        <Col sm={10}>\n                            <Input type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange} placeholder=\"Enter Last Name\"/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"exampleEmail\" sm={2}>Score <span style={{ color: 'red' }}>*</span></Label>\n                        <Col sm={10}>\n                            <Input type=\"number\" name=\"score\" value={score} onChange={this.handleChange} placeholder=\"Enter The Score\"/>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Col sm={12}>\n                            <Button color=\"primary\" onClick={this.handleClick}>Save Player</Button>{' '}\n                        </Col>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addPlayerAction: (data) => dispatch(addPlayerAction(data)),\n    editPlayerAction: (data) => dispatch(editPlayerAction(data)),\n})\n\nexport default connect(null, mapDispatchToProps)(CreatePlayer);\n","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport { deletePlayerAction, handleSortingAction, editPlayerAction } from './actions/playersAction';\n\nclass DisplayPlayer extends Component {\n    state = {\n        addNewPlayer: false,\n        displayPlayerData: [],\n        sortingIsDoneOn: '',\n        editPlayer: false,\n    };\n\n    componentWillMount() {\n        const { displayPlayerData } = this.props;\n        this.setState({\n            displayPlayerData,\n        })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { displayPlayerData } = nextProps;\n        this.setState({\n            displayPlayerData,\n        })\n    }\n\n    removePlayer = (e, data) => {\n        this.props.deletePlayerAction(data.id);\n    };\n\n    editPlayer = (e, data) => {\n        this.setState({\n            editPlayer: data,\n        })\n    };\n\n    handleSort = (data) => {\n        const { displayPlayerData, sortingIsDoneOn } = this.state;\n        if (data === 'score') {\n            this.props.handleSortingAction(displayPlayerData.sort((a, b) => Number(sortingIsDoneOn === 'score' ? a.score : b.score) - Number(sortingIsDoneOn === 'score' ? b.score : a.score) || (a.firstName + ', ' + a.lastName).localeCompare(b.firstName + ', ' + b.lastName)))\n            return this.setState({\n                sortingIsDoneOn: sortingIsDoneOn === 'score' ? '' : 'score',\n            })\n        }\n\n        this.props.handleSortingAction(displayPlayerData.sort((a, b) => (sortingIsDoneOn === 'name' ? a.firstName + ', ' + a.lastName : b.firstName + ', ' + b.lastName ).localeCompare(sortingIsDoneOn === 'name' ? b.firstName + ', ' + b.lastName : a.firstName + ', ' + a.lastName )))\n        this.setState({\n            sortingIsDoneOn: sortingIsDoneOn === 'name' ? '' : 'name',\n        })\n    };\n\n    render() {\n        const { addNewPlayer, editPlayer } = this.state;\n        const { displayPlayerData } = this.props;\n        if (addNewPlayer) {\n            return <Redirect to='/add-player' />;\n        }\n        if (editPlayer) {\n            console.log(editPlayer);\n            return <Redirect to={{\n                pathname: \"/add-player\",\n                state: { formData: editPlayer, edit: true },\n            }} />;\n        }\n\n        return (\n            <>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('name')}>Full Name</th>\n                        <th style={{ cursor: 'pointer' }} onClick={() => this.handleSort('score')}>Score</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            displayPlayerData.map((player, index) =>\n                                <tr key={ player.firstName + index }>\n                                    <td>{ player.firstName + ', ' + player.lastName }</td>\n                                    <td>{ player.score }</td>\n                                    <td style={{ cursor: 'pointer' }} >\n                                        <span onClick={(e) => this.removePlayer(e, player)}>Delete </span>\n                                        <span onClick={(e) => this.editPlayer(e, player)}> Edit</span>\n                                    </td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </Table>\n                <Button color=\"primary\" onClick={() => { this.setState({addNewPlayer: true}) }}>Add New Player</Button>{' '}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = ({ playersReducers }) => {\n    return playersReducers;\n};\n\nconst mapDispatchToProps = dispatch => ({\n    deletePlayerAction: (data) => dispatch(deletePlayerAction(data)),\n    handleSortingAction: (data) => dispatch(handleSortingAction(data)),\n    editPlayerAction: (data) => dispatch(editPlayerAction(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayPlayer);","import React, {Component} from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport CreatePlayer from './CreatePlayer';\nimport DisplayPlayer from './DisplayPlayer';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Route exact path=\"/add-player\" component={CreatePlayer}/>\n                    <Route exact path=\"/\" component={DisplayPlayer}/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}